// Predefined responses for cooking-related queries
export const getBotResponse = (userMessage) => {
    const message = userMessage.toLowerCase();
    
    if (message.includes('c√¥ng th·ª©c') || message.includes('cong thuc') || message.includes('recipe')) {
      return "üç≥ T√¥i c√≥ th·ªÉ g·ª£i √Ω m·ªôt s·ªë c√¥ng th·ª©c ngon! B·∫°n mu·ªën n·∫•u m√≥n g√¨? M√≥n ch√≠nh, m√≥n tr√°ng mi·ªáng, hay ƒë·ªì u·ªëng?";
    }
    
    if (message.includes('ph·ªü') || message.includes('pho')) {
      return "üçú Ph·ªü l√† m√≥n ƒÉn tuy·ªát v·ªùi! ƒê·ªÉ n·∫•u ph·ªü ngon, b·∫°n c·∫ßn: th·ªãt b√≤, b√°nh ph·ªü, h√†nh t√¢y, g·ª´ng, qu·∫ø, h·ªìi, ƒëinh h∆∞∆°ng. N∆∞·ªõc d√πng c·∫ßn ninh √≠t nh·∫•t 6-8 ti·∫øng nh√©!";
    }
    
    if (message.includes('c∆°m chi√™n') || message.includes('com chien')) {
      return "üçö C∆°m chi√™n ngon c·∫ßn c∆°m ngu·ªôi qua ƒë√™m, tr·ª©ng, t·ªèi bƒÉm, n∆∞·ªõc m·∫Øm v√† d·∫ßu ƒÉn. B√≠ quy·∫øt l√† l·ª≠a to, ƒë·∫£o nhanh tay!";
    }
    
    if (message.includes('b√°nh m√¨') || message.includes('banh mi')) {
      return "ü•ñ B√°nh m√¨ Vi·ªát Nam th·∫ßn th√°nh! C·∫ßn b√°nh m√¨ gi√≤n, pate, th·ªãt ngu·ªôi, d∆∞a chu·ªôt, ng√≤ rau. B·∫°n th√≠ch b√°nh m√¨ g√¨ nh·∫•t?";
    }
    
    if (message.includes('salad') || message.includes('xa l√°ch')) {
      return "ü•ó Salad healthy v√† ngon! T√¥i suggest: salad Caesar, salad Nicoise, ho·∫∑c salad tr√°i c√¢y. B·∫°n mu·ªën c√¥ng th·ª©c n√†o?";
    }
    
    if (message.includes('nguy√™n li·ªáu') || message.includes('nguyen lieu') || message.includes('ingredient')) {
      return "üõí ƒê·ªÉ t√¨m nguy√™n li·ªáu thay th·∫ø ho·∫∑c g·ª£i √Ω mua s·∫Øm, h√£y cho t√¥i bi·∫øt b·∫°n ƒëang ƒë·ªãnh n·∫•u m√≥n g√¨ nh√©!";
    }
    
    if (message.includes('th·ªùi gian') || message.includes('thoi gian') || message.includes('bao l√¢u')) {
      return "‚è∞ Th·ªùi gian n·∫•u n∆∞·ªõng r·∫•t quan tr·ªçng! B·∫°n ƒëang h·ªèi v·ªÅ m√≥n g√¨? T√¥i s·∫Ω cho b·∫°n bi·∫øt th·ªùi gian chu·∫©n nh·∫•t.";
    }
    
    if (message.includes('calo') || message.includes('calories') || message.includes('dinh d∆∞·ª°ng')) {
      return "üìä V·ªÅ dinh d∆∞·ª°ng v√† calories, t√¥i c√≥ th·ªÉ t∆∞ v·∫•n! B·∫°n ƒëang quan t√¢m ƒë·∫øn m√≥n ƒÉn n√†o c·ª• th·ªÉ?";
    }
    
    if (message.includes('ch√†o') || message.includes('hello') || message.includes('hi')) {
      return "üëã Ch√†o b·∫°n! R·∫•t vui ƒë∆∞·ª£c h·ªó tr·ª£ b·∫°n v·ªÅ n·∫•u ƒÉn. B·∫°n mu·ªën h·ªçc m√≥n g√¨ h√¥m nay?";
    }
    
    if (message.includes('c·∫£m ∆°n') || message.includes('cam on') || message.includes('thanks')) {
      return "üòä Kh√¥ng c√≥ g√¨! T√¥i lu√¥n s·∫µn s√†ng gi√∫p b·∫°n kh√°m ph√° th·∫ø gi·ªõi ·∫©m th·ª±c. C√≤n c√¢u h·ªèi n√†o kh√°c kh√¥ng?";
    }
    
    if (message.includes('l√†m') || message.includes('lam') || message.includes('how to')) {
      return "üë®‚Äçüç≥ T√¥i s·∫Ω h∆∞·ªõng d·∫´n b·∫°n t·ª´ng b∆∞·ªõc! B·∫°n mu·ªën h·ªçc l√†m m√≥n g√¨? C·ª© n√≥i t√™n m√≥n ƒÉn, t√¥i s·∫Ω ch·ªâ c√°ch l√†m chi ti·∫øt.";
    }
    
    // Default response
    return "ü§î Hmm, t√¥i ch∆∞a hi·ªÉu r√µ c√¢u h·ªèi c·ªßa b·∫°n. B·∫°n c√≥ th·ªÉ h·ªèi t√¥i v·ªÅ:\n‚Ä¢ C√¥ng th·ª©c n·∫•u ƒÉn\n‚Ä¢ Nguy√™n li·ªáu v√† c√°ch thay th·∫ø\n‚Ä¢ Th·ªùi gian n·∫•u n∆∞·ªõng\n‚Ä¢ Gi√° tr·ªã dinh d∆∞·ª°ng\n‚Ä¢ G·ª£i √Ω m√≥n ƒÉn\n\nH√£y th·ª≠ h·ªèi c·ª• th·ªÉ h∆°n nh√©!";
  };
  
  // Format timestamp
  export const formatTime = (date) => {
    return date.toLocaleTimeString('vi-VN', { 
      hour: '2-digit', 
      minute: '2-digit' 
    });
  };
  
  // Generate chat title from messages
  export const generateChatTitle = (messages) => {
    const userMessages = messages.filter(msg => !msg.isBot);
    if (userMessages.length > 0) {
      const firstUserMessage = userMessages[0].text;
      return firstUserMessage.length > 30 
        ? firstUserMessage.substring(0, 30) + '...'
        : firstUserMessage;
    }
    return `Cu·ªôc tr√≤ chuy·ªán ${new Date().toLocaleDateString('vi-VN')}`;
  };
  
  // Default welcome message
  export const getWelcomeMessage = () => ({
    id: 1,
    text: "Xin ch√†o! T√¥i l√† CookBot, tr·ª£ l√Ω n·∫•u ƒÉn c·ªßa b·∫°n. T√¥i c√≥ th·ªÉ gi√∫p b·∫°n t√¨m c√¥ng th·ª©c, g·ª£i √Ω m√≥n ƒÉn, ho·∫∑c tr·∫£ l·ªùi c√¢u h·ªèi v·ªÅ n·∫•u n∆∞·ªõng. B·∫°n c·∫ßn h·ªó tr·ª£ g√¨?",
    isBot: true,
    timestamp: new Date()
  });
  
  // Chat history storage keys
  export const STORAGE_KEYS = {
    CHAT_HISTORY: 'cookbot-chat-history'
  };
  
  // Chat history limit
  export const CHAT_HISTORY_LIMIT = 10;